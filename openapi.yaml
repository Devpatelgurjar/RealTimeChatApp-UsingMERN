openapi: 3.1.0
info:
  title: Real-Time Chat API
  version: 1.0.0
  description: This is the API documentation for your Real-Time Chat App.
servers:
  - url: http://localhost:5000/api
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /api/v1/auth/login:
    post:
      summary: Log in a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "200":
          description: Logged in successfully
        "400":
          description: Invalid credentials or missing fields
        "500":
          description: Internal server error
  /api/v1/auth/signup:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                profilePic:
                  type: string
                  description: Optional profile picture URL
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid user data
        "422":
          description: Validation error
        "500":
          description: Internal server error
  /api/v1/auth/logout:
    get:
      summary: Log out the current user
      tags:
        - Auth
      responses:
        "200":
          description: Logged out successfully
  /api/v1/auth/update-profile:
    put:
      summary: Update user profile picture and/or name
      tags:
        - Auth
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profilePic:
                  type: string
                  format: binary
                  description: Image file for profile picture
      responses:
        "200":
          description: Profile updated successfully
        "400":
          description: Profile picture is required
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /api/v1/auth/check:
    get:
      summary: Check if user is authenticated
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User is authenticated
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /api/v1/messages/users:
    get:
      summary: Get users for sidebar messaging
      tags:
        - Messages
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users fetched successfully
        "401":
          description: Unauthorized
  /api/v1/messages/{id}:
    get:
      summary: Get messages by conversation ID
      tags:
        - Messages
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the user or chat
      responses:
        "200":
          description: Messages retrieved successfully
        "401":
          description: Unauthorized
        "404":
          description: Messages not found
  /api/v1/messages/send/{id}:
    post:
      summary: Send a message to a user
      tags:
        - Messages
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Recipient user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
      responses:
        "201":
          description: Message sent successfully
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /api/v1/messages/delete:
    delete:
      summary: Delete a message
      tags:
        - Messages
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messageId
              properties:
                messageId:
                  type: string
      responses:
        "200":
          description: Message deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Message not found
tags: []
